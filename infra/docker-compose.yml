services:
  # PostgreSQL Service
  postgres:
    image: postgres:14
    container_name: postgres-db
    environment:
      POSTGRES_DB: ${DB_NAME}  # Set your database name
      POSTGRES_USER: ${DB_USER}  # Set your database user
      POSTGRES_PASSWORD: ${DB_PASSWORD}  # Set your database password
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  # NestJS Application
  app:
    build: 
      context: ../  # Build context set to the current directory
      dockerfile: infra/Dockerfile  # Ensure you have a Dockerfile for the NestJS service
      args:
        - DB_HOST_ARG=${DB_HOST}
        - DB_PORT_ARG=${DB_PORT}
        - DB_USER_ARG=${DB_USER}
        - DB_PASSWORD_ARG=${DB_PASSWORD}
        - JWT_SECRET_ARG=${JWT_SECRET}
        - NODE_ENV_ARG=${NODE_ENV}
        - API_PORT=${API_PORT} 
    container_name: nestjs-app
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: ${NODE_ENV}
      API_PORT: ${API_PORT}
    depends_on:
      - postgres  # Ensures the postgres service is up before the app
    ports:
      - "${API_PORT}:3000"
    volumes:
      - ../:/usr/src/app
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge